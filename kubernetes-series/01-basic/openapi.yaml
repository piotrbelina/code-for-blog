openapi: 3.0.3
info:
  title: TODO API
  description: TODO API
  version: 1.0.0
servers:
  - url: 'http://localhost:8000'
paths:
  /todos:
    get:
      description: "Get all todos"
      responses:
        200:
          description: "List of todos"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
    post:
      description: "Create a todo"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        400:
          $ref: "#/components/responses/400"

  /todos/{id}:
    get:
      description: "Get todo"
      parameters:
        - $ref: "#/components/parameters/idParam"
      responses:
        200:
          description: "Get a todo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        404:
          $ref: "#/components/responses/404"
    put:
      description: "Updates todo"
      parameters:
        - $ref: "#/components/parameters/idParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
      responses:
        200:
          description: "Todo updated"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
    delete:
      description: "Delete todo"
      parameters:
        - $ref: "#/components/parameters/idParam"
      responses:
        200:
          description: "Todo removed"
        404:
          $ref: "#/components/responses/404"

components:
  requestBodies:
    TodoBody:
      description: Todo object to be added or updated
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
            required:
              - title
  schemas:
     Todo:
       type: object
       properties:
         id:
           type: string
           format: uuid
         title:
           type: string
       required:
         - title
  parameters:
    idParam:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  responses:
    404:
      description: A todo with the specified ID was not found.
    400:
      description: Invalid input